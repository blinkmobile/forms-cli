'use strict'

const uuid = require('uuid/v4')

angular.module('<%moduleName%>').factory('<%moduleName%>Model',
[<%#subFormModelServices%><%&subFormDependencyList%>,<%/subFormModelServices%>
function BlinkModelFactory (<%#subFormModelServices%><%&subFormModelServices%><%/subFormModelServices%>) {
  function <%moduleName%>Model (modelObj) {
    modelObj ? this.set(modelObj) : this.reset()
  }

  const subFormTypes = {}
  <%#subForms%>
  subFormTypes.<%.%> = <%.%>Model
  <%/subForms%>

  <%moduleName%>Model.prototype.defaults = function () {
    const defaults = { }
    <%#_elements%>
    defaults.<%name%> = <% &value%>
    <%/_elements%>
    return defaults
  }

  <%moduleName%>Model.prototype.reset = function () {
    this.set(this.defaults())
  }

  <%moduleName%>Model.prototype.set = function (modelObj) {
    for(let prop in modelObj) {
      if (modelObj.hasOwnProperty(prop)) {
        this[prop] = modelObj[prop]
      }
    }
  }

  <%moduleName%>Model.prototype.create = function (modelObj) {
    const model = new <%moduleName%>Model(modelObj)

    return model
  }

  <%moduleName%>Model.prototype.createSubForm = function (type) {
    const ctor = subFormTypes[type]
    if (!ctor) {
      return
    }

    return ctor.create()
  }

  return new <%moduleName%>Model()
}])
