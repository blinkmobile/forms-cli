function <%moduleName%>Controller (<%moduleName%>Model, draftQueue, $scope, $window, $localForage, <%moduleName%>SubmitToBMPService) {
  this.toJson = function (obj) {
    return JSON.stringify(obj, null, 2)
  }

  // lifecycle functions
  this.$onInit = function $onInit() {
    // the form model
    this.model = this.model || <%moduleName%>Model || {}

    this.page = this.page || 0
    this.onPageChange = this.onPageChange || (() => true)
    <%#pageNumbers%>
    this.pageNumbers = <%pageNumbers%>
    <%/pageNumbers%>
  }

  this.$onChanges = (changesObj) => {}
  this.$doCheck = () => {}
  this.$onDestroy = () => {}
  this.$postLink = () => {}

  this.addSubform = (collection) => {
    collection.push({})
  }

  this.changePageBy = (inc) => {
    this.page += inc
    if (this.page < 0) {
      this.page = 0
    }

    if (this.page > this.pageNumbers.length) {
      this.page = this.pageNumbers.length
    }

    this.onPageChange({page: this.page})
  }

  this.removeSubform = (model, collection) => {
    const idx = collection.indexOf(model)
    if (idx === -1) {
      return
    }

    collection.splice(idx, 1)
  }

  this.onSubmitClick = (model) => {
    return <%moduleName%>SubmitToBMPService('<%name%>', model)
  }

  this.onSaveDraftClick = (model) => draftQueue.setItem(model, '<%moduleName%>')

  this.onClearClick = (model) => {
    if (model._uuid) {
      // remove item from temporary storage
      return $localForage.removeItem(model._uuid).then(() => model.reset())
    }

    model.reset()
  }
}

angular.module('<%moduleName%>').component('<%moduleName%>', {
  transclude: {
    pagination: '?pagination'
  },
  templateUrl: 'component-<%name%>.html',
  controller: <%moduleName%>Controller,
  controllerAs: '<%moduleName%>',
  bindings: {
    model: '<?',
    page: '<?',
    onPageChange: '&?',
    isSubForm: '<?',
    subFormIndex: '<?'
  }
})
